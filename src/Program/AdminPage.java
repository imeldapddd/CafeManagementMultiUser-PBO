package Program;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import javax.swing.table.DefaultTableModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;


/**
 *
 * @author imeld
 */
public class AdminPage extends javax.swing.JFrame {

    private DefaultTableModel model = null;
    private PreparedStatement stat;
    private ResultSet rs;
    Connection con = null;
    Statement st=null;
    
    /**
     * Creates new form AdminPage
     */
    public AdminPage() {
        initComponents();
        refreshTable();
        
        table.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
        public void valueChanged(ListSelectionEvent event) {
        if (!event.getValueIsAdjusting() && table.getSelectedRow() != -1) {
            int selectedRow = table.getSelectedRow();
            if (selectedRow != -1) {
                // Ambil nilai dari tabel dan set ke field teks yang sesuai
                String nama = table.getValueAt(selectedRow, 0).toString();
                String username = table.getValueAt(selectedRow, 1).toString();
                String password = table.getValueAt(selectedRow, 2).toString();
                String role = table.getValueAt(selectedRow, 3).toString();

                txtnama.setText(nama);
                txtusername.setText(username);
                txtpas.setText(password);
                cmbRole.setSelectedItem(role);
             }
            }
        }
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        txtnama = new javax.swing.JTextField();
        txtusername = new javax.swing.JTextField();
        txtpas = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbRole = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        Logout = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(48, 150, 253));

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        jLabel3.setText("Nama Lengkap");

        jLabel4.setText("Opsi");

        cmbRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "User" }));

        jButton1.setText("Simpan");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Logout.setText("Logout");
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "nama", "username", "password", "role"
            }
        ));
        jScrollPane1.setViewportView(table);

        jButton3.setText("Edit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Hapus");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Logout))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtusername)
                                    .addComponent(txtnama)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton3))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cmbRole, 0, 163, Short.MAX_VALUE)
                                        .addComponent(txtpas)))))
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Logout)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtnama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtusername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void hapuslayar() {
        txtnama.setText("");
        txtusername.setText("");
        txtpas.setText("");
        txtpas.setText("");
        cmbRole.setSelectedIndex(0);
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
        // Validasi input kosong
        if (txtnama.getText().isEmpty() || txtusername.getText().isEmpty() || String.valueOf(txtpas.getText()).isEmpty() || cmbRole.getSelectedItem().equals("Pilih Sebagai")) {
            JOptionPane.showMessageDialog(this, "Data Tidak Boleh Kosong", "Pesan", JOptionPane.ERROR_MESSAGE);
            hapuslayar();
            return; // Keluar dari metode jika ada input yang kosong
        }
        
        // Koneksi ke database
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost/dblogin", "root", "");
        
        // Periksa ketersediaan username
        String username = txtusername.getText();
        String cekUsernameQuery = "SELECT * FROM tblogin WHERE username=?";
        PreparedStatement ps = con.prepareStatement(cekUsernameQuery);
        ps.setString(1, username);
        ResultSet rs = ps.executeQuery();
        
        if (rs.next()) {
            JOptionPane.showMessageDialog(this, "Username sudah terdaftar", "Pesan", JOptionPane.WARNING_MESSAGE);
            hapuslayar();
        } else {
            // Jika username belum terdaftar, lakukan INSERT
            String role = cmbRole.getSelectedItem().toString();
            String simpanQuery = "INSERT INTO tblogin (nama, username, password, opsi) VALUES (?, ?, ?, ?)";
            PreparedStatement psInsert = con.prepareStatement(simpanQuery);
            psInsert.setString(1, txtnama.getText());
            psInsert.setString(2, username);
            psInsert.setString(3, String.valueOf(txtpas.getText()));
            psInsert.setString(4, role);
            
            int rowsInserted = psInsert.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(this, "Registrasi Berhasil");
                refreshTable(); // Refresh tabel setelah data berhasil disimpan
                hapuslayar();
            }
        }
    } catch (SQLException | ClassNotFoundException e) {
        JOptionPane.showMessageDialog(this, "Gagal terhubung ke database atau terjadi kesalahan lain", "Pesan", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace(); // Cetak stack trace untuk melacak masalah
    } finally {
        try {
            if (con != null) {
                con.close(); // Tutup koneksi setelah selesai
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        FormLogin l = new FormLogin();
        l.setVisible(true);
        this.setVisible(false);              
    }//GEN-LAST:event_LogoutActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    try {
        // Konfirmasi pengguna sebelum menghapus
        int confirm = JOptionPane.showConfirmDialog(this, "Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return; // Jika pengguna tidak mengkonfirmasi, keluar dari metode
        }
        
        // Koneksi ke database
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost/dblogin", "root", "");
        
        // Hapus data berdasarkan username yang dipilih
        String deleteQuery = "DELETE FROM tblogin WHERE username=?";
        PreparedStatement psDelete = con.prepareStatement(deleteQuery);
        psDelete.setString(1, txtusername.getText());
        
        int rowsDeleted = psDelete.executeUpdate();
        if (rowsDeleted > 0) {
            JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
            refreshTable(); // Refresh tabel setelah hapus berhasil
            hapuslayar(); // Kosongkan form setelah hapus berhasil
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menghapus data", "Pesan", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException | ClassNotFoundException e) {
        JOptionPane.showMessageDialog(this, "Gagal terhubung ke database atau terjadi kesalahan lain", "Pesan", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace(); // Cetak stack trace untuk melacak masalah
    } finally {
        try {
            if (con != null) {
                con.close(); // Tutup koneksi setelah selesai
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    try {
        // Validasi input kosong
        if (txtnama.getText().isEmpty() || txtusername.getText().isEmpty() || String.valueOf(txtpas.getText()).isEmpty() || cmbRole.getSelectedItem().equals("Pilih Sebagai")) {
            JOptionPane.showMessageDialog(this, "Data Tidak Boleh Kosong", "Pesan", JOptionPane.ERROR_MESSAGE);
            return; // Keluar dari metode jika ada input yang kosong
        }
        
        // Koneksi ke database
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost/dblogin", "root", "");
        
        // Update data berdasarkan username yang dipilih
        String updateQuery = "UPDATE tblogin SET nama=?, password=?, opsi=? WHERE username=?";
        PreparedStatement psUpdate = con.prepareStatement(updateQuery);
        psUpdate.setString(1, txtnama.getText());
        psUpdate.setString(2, String.valueOf(txtpas.getText()));
        psUpdate.setString(3, cmbRole.getSelectedItem().toString());
        psUpdate.setString(4, txtusername.getText());
        
        int rowsUpdated = psUpdate.executeUpdate();
        if (rowsUpdated > 0) {
            JOptionPane.showMessageDialog(this, "Data berhasil diupdate");
            refreshTable(); // Refresh tabel setelah update berhasil
            hapuslayar(); // Kosongkan form setelah update berhasil
        } else {
            JOptionPane.showMessageDialog(this, "Gagal mengupdate data", "Pesan", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException | ClassNotFoundException e) {
        JOptionPane.showMessageDialog(this, "Gagal terhubung ke database atau terjadi kesalahan lain", "Pesan", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace(); // Cetak stack trace untuk melacak masalah
    } finally {
        try {
            if (con != null) {
                con.close(); // Tutup koneksi setelah selesai
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    public void refreshTable() {
    model = new DefaultTableModel();
    model.addColumn("Nama");
    model.addColumn("Username");
    model.addColumn("Password");
    model.addColumn("Role"); // Menambahkan kolom "Role" pada model

    try {
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost/dblogin", "root", "");
        st = con.createStatement();

        rs = st.executeQuery("SELECT * FROM tblogin");

        while (rs.next()) {
            Object[] data = {
                rs.getString("nama"),
                rs.getString("username"),
                rs.getString("password"),
                rs.getString("opsi")
            };
            model.addRow(data);
        }
        table.setModel(model); // Mengatur model pada tabel
    } catch (SQLException | ClassNotFoundException e) {
        JOptionPane.showMessageDialog(null, e.getMessage());
    } finally {
        try {
            if (con != null) {
                con.close();
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
}


    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Logout;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbRole;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtnama;
    private javax.swing.JTextField txtpas;
    private javax.swing.JTextField txtusername;
    // End of variables declaration//GEN-END:variables
}
